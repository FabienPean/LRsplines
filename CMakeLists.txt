PROJECT(LRSpline)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

ENABLE_LANGUAGE(CXX)

#IF(${CMAKE_BUILD_TYPE} MATCHES "Release")
#  ENABLE_TESTING()
#ENDIF(${CMAKE_BUILD_TYPE} MATCHES "Release")

# Add local modules
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
                      ${CMAKE_SOURCE_DIR}/cmake/Modules)

# Required packages
FIND_PACKAGE(Boost REQUIRED)
FIND_PACKAGE(GoTools REQUIRED)

# Required libraries
SET(DEPLIBS ${GoTools_LIBRARIES} ${Boost_LIBRARIES})

# Required include directories
SET(INCLUDES
  ${Boost_INCLUDE_DIRS}
  ${GoTools_INCLUDE_DIRS}
  ${PROJECT_SOURCE_DIR}/include
)

INCLUDE_DIRECTORIES(${INCLUDES})

SET(EXECUTABLE_OUTPUT_PATH bin)
SET(LIBRARY_OUTPUT_PATH lib)

IF(NOT WIN32)
  # Emit position-independent code, suitable for dynamic linking
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
  # Enable all warnings
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-parentheses")
ENDIF(NOT WIN32)

# Make the LRSpline library
FILE(GLOB_RECURSE LRSPLINE_SRCS ${PROJECT_SOURCE_DIR}/src/*.cpp)
ADD_LIBRARY(LRSpline ${LRSPLINE_SRCS})

# Make some Apps
FILE(GLOB_RECURSE Tensor_SRCS ${PROJECT_SOURCE_DIR}/Apps/TensorComparison.cpp)
ADD_EXECUTABLE(TensorComparison ${Tensor_SRCS})
TARGET_LINK_LIBRARIES(TensorComparison LRSpline ${DEPLIBS})

FILE(GLOB_RECURSE UnityPart_SRCS ${PROJECT_SOURCE_DIR}/Apps/PartitionOfUnityTest.cpp)
ADD_EXECUTABLE(PartitionOfUnityTest ${UnityPart_SRCS})
TARGET_LINK_LIBRARIES(PartitionOfUnityTest LRSpline ${DEPLIBS})

FILE(GLOB_RECURSE Refinement_SRCS ${PROJECT_SOURCE_DIR}/Apps/RefinementUnchanged.cpp)
ADD_EXECUTABLE(RefinementUnchanged ${Refinement_SRCS})
TARGET_LINK_LIBRARIES(RefinementUnchanged LRSpline ${DEPLIBS})

FILE(GLOB_RECURSE Stresstest_SRCS ${PROJECT_SOURCE_DIR}/Apps/StresstestRefinement.cpp)
ADD_EXECUTABLE(StresstestRefinement ${Stresstest_SRCS})
TARGET_LINK_LIBRARIES(StresstestRefinement LRSpline ${DEPLIBS})

FILE(GLOB_RECURSE ReadWrite_SRCS ${PROJECT_SOURCE_DIR}/Apps/TestReadWrite.cpp)
ADD_EXECUTABLE(TestReadWrite ${ReadWrite_SRCS})
TARGET_LINK_LIBRARIES(TestReadWrite LRSpline ${DEPLIBS})

FILE(GLOB_RECURSE ReadWrite_SRCS ${PROJECT_SOURCE_DIR}/Apps/Diagonal.cpp)
ADD_EXECUTABLE(Diagonal ${ReadWrite_SRCS})
TARGET_LINK_LIBRARIES(Diagonal LRSpline ${DEPLIBS})

# # Regression tests
# FILE(GLOB_RECURSE POISSON_TESTFILES "${PROJECT_SOURCE_DIR}/Apps/Poisson/Test/*.reg")
# FOREACH(TESTFILE ${POISSON_TESTFILES})
#   ADD_TEST(${TESTFILE} ${PROJECT_SOURCE_DIR}/test/regtest.sh "${CMAKE_BINARY_DIR}/${EXECUTABLE_OUTPUT_PATH}/Poisson" "${TESTFILE}")
# ENDFOREACH()

IF(NOT LRSPLINE_INSTALL_PREFIX)
  SET(LRSPLINE_INSTALL_PREFIX $ENV{HOME})
ENDIF(NOT LRSPLINE_INSTALL_PREFIX)

# 'install' target
IF(WIN32)
  # TODO
ELSE(WIN32)
  # lib
  INSTALL(TARGETS LRSpline DESTINATION ${LRSPLINE_INSTALL_PREFIX}/lib)

  # headers
  FILE(GLOB_RECURSE LRSPLINE_HEADERS include/LRSpline/*.h)
  INSTALL(FILES ${LRSPLINE_HEADERS}
          DESTINATION ${LRSPLINE_INSTALL_PREFIX}/include/LRSpline)
ENDIF(WIN32)
